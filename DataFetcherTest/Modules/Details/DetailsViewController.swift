//
//  DetailsViewController.swift
//  DataFetcherTest
//
//  Created by Davron on 10.06.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailsDisplayLogic: class
{
    func dispalayFinalDaata(viewModel: Details.Comments.ViewModel)
}

class DetailsViewController: UIViewController, DetailsDisplayLogic, UITableViewDelegate, UITableViewDataSource {
    
    //MARK: Variables
    
    var interactor: DetailsBusinessLogic?
    var router: (NSObjectProtocol & DetailsRoutingLogic)?
    
    var mainData: MainItemModel?
    var finalData = [DetailsItemModel]()
    
    // MARK: UI Elements
    
    var backView: UIView = {
        let view = UIView()
        view.backgroundColor = .white
        return view
    }()
    var topView: UIView = {
        let view = UIView()
        return view
    }()
    
    var mainTitle: UILabel = {
        let title = UILabel()
        title.text = "Title"
        title.font = .systemFont(ofSize: 20, weight: .bold)
        title.numberOfLines = 0
        title.textAlignment = .center
        return title
    }()
    
    var body: UILabel = {
        let body = UILabel()
        body.text = "Body"
        body.font = .systemFont(ofSize: 16, weight: .regular)
        body.numberOfLines = 0
        return body
    }()
    
    var commentsTitle: UILabel = {
        let title = UILabel()
        title.text = "Comments"
        title.textAlignment = .center
        title.font = .systemFont(ofSize: 20, weight: .bold)
        title.numberOfLines = 0
        return title
    }()
    
    var tableView: UITableView = {
        let table = UITableView()
        return table
    }()
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder) 
    }
    
    // MARK: - Setup Clean Code Design Pattern 
    
    func setup(data: MainItemModel) {
        let viewController = self
        let interactor = DetailsInteractor()
        let presenter = DetailsPresenter()
        let router = DetailsRouter()
        viewController.interactor = interactor
        viewController.router = router
        viewController.mainData = data
        interactor.presenter = presenter
        interactor.mainId = data.id
        presenter.viewController = viewController
        router.viewController = viewController 
    }
    
    // MARK: - Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        title = "Details"
        setUpViews()
        setUpConstraints()
        fetchCommentsData()
    }
    
    //Setting uo view
    
    func setUpViews() {
        view.addSubview(backView)
        backView.addSubview(topView)
        topView.addSubview(mainTitle)
        topView.addSubview(body)
        topView.addSubview(commentsTitle)
        backView.addSubview(tableView)
        tableView.delegate = self
        tableView.dataSource = self
        tableView.register(DetailsTableViewCell.self, forCellReuseIdentifier: "cell")
        tableView.estimatedRowHeight = 100.0
        tableView.rowHeight = UITableView.automaticDimension
        mainTitle.text = mainData?.title
        body.text = mainData?.body
    }
    
    //Setting up constraints
    func setUpConstraints() {
        backView.snp.makeConstraints{(make) in
            make.left.right.bottom.top.equalToSuperview()
        }
        topView.snp.makeConstraints{(make) in
            make.left.equalToSuperview().offset(20)
            make.right.equalToSuperview().inset(20)
            make.top.equalToSuperview().offset(120)
        }
        commentsTitle.snp.makeConstraints{(make) in
            make.left.right.equalToSuperview()
            make.bottom.equalToSuperview().inset(5)
        }
        mainTitle.snp.makeConstraints{(make) in
            make.left.equalToSuperview()
            make.right.equalToSuperview()
            make.top.equalToSuperview()
        }
        body.snp.makeConstraints{(make) in
            make.left.equalToSuperview()
            make.right.equalToSuperview()
            make.bottom.equalTo(commentsTitle.snp.top).inset(-20)
            make.top.equalTo(mainTitle.snp.bottom).inset(-10)
        }
        tableView.snp.makeConstraints{(make) in
            make.left.equalToSuperview()
            make.right.equalToSuperview()
            make.top.equalTo(topView.snp.bottom).offset(20)
            make.bottom.equalToSuperview()
        }
    }
    
    // MARK: - request data from DetailsInteractor
    
    func fetchCommentsData() {
        DispatchQueue.main.async {[weak self] in
            self?.tableView.tableFooterView = self?.tableViewFooterView()
        }
        interactor?.fetchCommentsData()
    } 
    
    // MARK: - display view model from DetailsPresenter
    
    func dispalayFinalDaata(viewModel: Details.Comments.ViewModel) {
        self.finalData = viewModel.finalData
        DispatchQueue.main.async {[weak self] in
            self?.tableView.tableFooterView = nil
            self?.tableView.reloadData()
        }
    }
}

//MARK: Table View Methods

extension DetailsViewController {
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return finalData.count
    }
    
    //Footer spinner when loading the data
    private func tableViewFooterView() -> UIView {
        let footerView = UIView(frame: CGRect(x: 0, y: 0, width: tableView.frame.width, height: 80))
        let spinner = UIActivityIndicatorView()
        spinner.center = footerView.center
        footerView.addSubview(spinner)
        spinner.startAnimating()
        return footerView
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath) as! DetailsTableViewCell
        cell.name.text = finalData[indexPath.row].name
        cell.body.text = finalData[indexPath.row].body
        cell.email.text = finalData[indexPath.row].email
        return cell
    }
    
}
